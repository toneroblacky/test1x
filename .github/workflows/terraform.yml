name: Terraform CI/CD Workflow

on:
  push:
    branches:
      - develop
      - production
  workflow_dispatch:

env:
  VAULT_ADDR: ${{ secrets.VAULT_ADDRESS }}
  VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}

jobs:
  terraform:
    name: Terraform Workflow
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.5

    - name: Terraform Init
      run: |
        terraform init -reconfigure \
          -backend-config="address=${{ secrets.VAULT_ADDRESS }}" \
          -backend-config="path=secret/terraform/${{ github.ref_name == 'production' && 'production' || github.ref_name }}-backend" \
          -backend-config="token=${{ secrets.VAULT_TOKEN }}"

    - name: Terraform Workspace
      run: |
        if [[ "${{ github.ref_name }}" == "production" ]]; then
          terraform workspace select production || terraform workspace new production
        else
          terraform workspace select ${{ github.ref_name }} || terraform workspace new ${{ github.ref_name }}
        fi

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Plan
      run: terraform plan -var="vault_token=${{ secrets.VAULT_TOKEN }}" -out=plan.tfplan

  apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: terraform
    if: github.event_name == 'workflow_dispatch'
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.5

    - name: Terraform Init
      run: |
        terraform init -reconfigure \
          -backend-config="address=${{ secrets.VAULT_ADDRESS }}" \
          -backend-config="path=secret/terraform/${{ github.ref_name == 'production' && 'production' || github.ref_name }}-backend" \
          -backend-config="token=${{ secrets.VAULT_TOKEN }}"

    - name: Terraform Workspace
      run: |
        if [[ "${{ github.ref_name }}" == "production" ]]; then
          terraform workspace select production || terraform workspace new production
        else
          terraform workspace select ${{ github.ref_name }} || terraform workspace new ${{ github.ref_name }}
        fi

    - name: Terraform Apply (Manual)
      run: terraform apply plan.tfplan
